name: CI

on: [push]

env:
  node_version: "14.x"
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2
    - name: Setup
      run: |
        cp .env.example .env
        docker-compose pull db
        docker-compose build
        docker-compose run --rm web sh -c 'exit 0'
    - name: Lint
      run: docker-compose run --rm web yarn lint

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2
    - name: Setup
      run: |
        cp .env.example .env
        docker-compose pull db
        docker-compose build
        docker-compose run --rm web sh -c 'exit 0'
        docker-compose up --detach
        docker-compose exec -T db psql -U postgres -c 'create database test;'
    - name: Unit test
      run: docker-compose exec -T web yarn test
    - name: E2E test
      run: docker-compose exec -T web yarn test:e2e

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2
    - name: Setup
      run: |
        cp .env.example .env
        docker-compose pull db
        docker-compose build
        docker-compose run --rm web sh -c 'exit 0'
    - name: Build
      run: docker-compose run --rm web yarn build

  build-and-upload-docker-image:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      packages: write
    outputs:
      docker-tag: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          file: Dockerfile.prod
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha
